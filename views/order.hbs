<style>
  /* Ensure modal is perfectly centered */
  .modal-dialog {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .modal-content {
    width: 80%;
    /* Adjust the width of the modal as necessary */
    max-width: 600px;
    /* Set a maximum width */
    margin: auto;
  }
</style>

<div class="container">
  <h1 class="text-center my-4">Payment Method</h1>

  {{!-- <!-- Cash on Delivery Option -->
  <div class="payment-method-container mb-4">
    <h4><strong>Payment Method:</strong> Cash on Delivery</h4>
    <p>You will pay in cash when the product is delivered to your address.</p>
  </div> --}}

  {{> AlreadyDefinedAddress }}
  {{> addressAdd }}
  {{> rozerPay}}
</div>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
  // Adding event listener to the form submit
  document.getElementById('orderForm').addEventListener('submit', async function (e) {
    e.preventDefault(); // Prevent the default form submission

    // Get the form data
    const customerName = document.getElementById('name').value;
    const customerPhone = document.getElementById('phone').value;
    const addressType = document.querySelector('input[name="addressType"]:checked').value;
    const timeSlot = document.querySelector('input[name="timeSlot"]:checked').value; // Fetch selected time slot
    const line1 = document.getElementById('line1').value;
    const line2 = document.getElementById('line2').value;
    const city = document.getElementById('city').value;
    const state = document.getElementById('state').value;
    const zip = document.getElementById('zip').value;
    const instructions = document.getElementById('instructions').value;

    // Prepare the address object
    const address = {
      customerName,
      customerPhone,
      line1,
      line2,
      city,
      state,
      zip,
      addressType, // Include the address type
    };

    // Prepare the order data to send to the server
    const orderData = {
      customerName,
      customerPhone,
      address: [address], // Store as array for consistency
      instructions,
      timeSlot, // Include the selected time slot
    };

    try {
      // Make the API call using axios
      const response = await axios.post(`order/paynow`, orderData, {
        headers: {
          'Content-Type': 'application/json',
        }
      });

      if (response.status === 201) {
        const orderConfirmationModal = new bootstrap.Modal(document.getElementById('orderConfirmationModal'));
        orderConfirmationModal.show();
      }
    } catch (error) {
      console.error('Error placing order:', error);
      alert('An error occurred while placing the order. Please try again later.');
    }
  });
</script>


<!-- Order Confirmation Modal -->
<div class="modal fade" id="orderConfirmationModal" tabindex="-1" aria-labelledby="orderConfirmationModalLabel"
  aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered"> <!-- Center the modal vertically -->
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="orderConfirmationModalLabel">Order Confirmed</h5>
      </div>
      <div class="modal-body">
        Your order has been successfully confirmed. Please review your order details.
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-warning" onclick="redirectOrderDetails()"
          style="width: 200px; border: none; padding: 10px 20px; font-weight: 600;">Close
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Thank You Modal -->
<div class="modal fade" id="thankYouModal" tabindex="-1" aria-labelledby="thankYouModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" style="max-width: 80%; width: 100%;">
    <!-- Adjusted max-width for responsiveness -->
    <div class="modal-content"
      style="background-color: #fff; border-radius: 12px; border: none; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
      <div class="modal-header"
        style="background-color: #3faffa; color: white; border-top-left-radius: 12px; border-top-right-radius: 12px; border-bottom: 1px solid #e1e1e1;">
        <h5 class="modal-title" id="thankYouModalLabel" style="font-weight: 600;">Thank You for Your Order!</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="color: white;"
          onclick="redirectHome()"></button> <!-- Close Button with Redirection -->
      </div>
      <div class="modal-body text-center" style="padding: 40px 20px;">
        <!-- Simple message without the GIF -->
        <p style="color: #333; font-weight: 500; font-size: 22px;">
          <b> Thank you for choosing us! </b> <br>
          Your order is being processed. We’ll notify you when it’s ready for delivery!
        </p>
      </div>
      <div class="modal-footer" style="border-top: 1px solid #e1e1e1; padding: 15px;">
        <!-- Redirect to Order Details page -->
        <button type="button" class="btn btn-primary" id="viewOrderDetailsBtn" onclick="redirectOrderDetails()"
          style="width: 200px; background-color: #3faffa; border: none; padding: 10px 20px; font-weight: 600;">View
          Order Details</button>
        <!-- Close button with Redirection -->
        <button type="button" class="btn btn-light" data-bs-dismiss="modal" onclick="redirectHome()"
          style="border: 2px solid #e1e1e1; color: #333; font-weight: 600; width: 100px;">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
  // Function to redirect to the Home page
  function redirectHome() {
    window.location.href = '/';  // Adjust the URL to your home page URL
  }

  // Function to redirect to the Order Details page
  function redirectOrderDetails() {
    window.location.href = '/order/details';  // Adjust the URL to your order details page URL
  }

  function getUpcomingSunday() {
    const today = new Date();
    const dayOfWeek = today.getDay(); // 0 = Sunday, 1 = Monday, ..., 6 = Saturday

    // Calculate days until the next Sunday
    const daysUntilSunday = (7 - dayOfWeek) % 7 || 7;

    // Calculate upcoming Sunday date
    const upcomingSunday = new Date();
    upcomingSunday.setDate(today.getDate() + daysUntilSunday);

    // Format the date as YYYY-MM-DD
    const formattedDate = upcomingSunday.toISOString().split('T')[0];

    return { formattedDate, daysUntilSunday };
  }

  function displayDeliveryMessage() {
    const { formattedDate, daysUntilSunday } = getUpcomingSunday();
    const message = `Your order will be delivered on ${formattedDate} ( With in ${daysUntilSunday} days).`;
    document.getElementById('delivery-message').textContent = message;
  }

  displayDeliveryMessage();


</script>