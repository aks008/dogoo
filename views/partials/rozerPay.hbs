<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Razorpay Payment</title>
    <!-- Include Razorpay Script -->
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <!-- Include Axios Script -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>

<body>
    <script>
        // Handle the payment button click
        function handlePayment(paymentDetails, paymentId, orderId) {
            // Step 1: Call your server to create the Razorpay order using Axios
            axios.post('/rozerPay/create-order', {
                amount: paymentDetails?.newOrder?.totalAmount, // Amount in INR
                currency: 'INR',
            })
                .then(function (response) {
                    // Step 2: Use the order ID returned from the server
                    const razorpayOrderId = response.data.id;

                    // Step 3: Initialize Razorpay checkout with the order ID
                    const options = {
                        key: 'rzp_test_IPf7v8DYBqyDs3', // Your Razorpay key
                        amount: paymentDetails.totalAmount, // Amount in paise
                        currency: 'INR',
                        order_id: razorpayOrderId, // Order ID from the server response
                        name: 'Dogo Biscuit', // Your company name
                        description: 'Payment for your order',

                        // Success Handler
                        handler: function (response) {
                            console.log("Payment Successful!", response, paymentId);

                            // Step 4: Call backend API to update the payment status
                            axios.put(`/payment/${paymentId}`, {
                                transaction: response,
                                paymentStatus: "success",
                            }, {
                                headers: {
                                    'Authorization': `Bearer ${localStorage.getItem('token')}`,
                                    'Content-Type': 'application/json',
                                },
                            })
                                .then(res => {
                                    window.location.href = `/order/${orderId}`;
                                })
                                .catch(error => {
                                    console.error("Error updating payment status:", error);
                                });
                        },

                        prefill: {
                            name: paymentDetails.orderAddressDetails.name,
                            email: paymentDetails.orderAddressDetails.email,
                            contact: paymentDetails.orderAddressDetails.phone
                        },

                        theme: {
                            color: '#fffff'
                        },

                        // Failure & Canceled Payment Handling
                        modal: {
                            "ondismiss": function () {
                                console.log("Payment Canceled or Failed!");

                                // Step 5: Call API to update payment status as failed
                                axios.put(`/payment/${paymentId}`, {
                                    paymentStatus: "failed",
                                }, {
                                    headers: {
                                        'Authorization': `Bearer ${localStorage.getItem('token')}`,
                                        'Content-Type': 'application/json',
                                    },
                                })
                                    .then(res => {
                                        console.log("Payment status updated as failed:", res.data);
                                    })
                                    .catch(error => {
                                        console.error("Error updating failed payment status:", error);
                                    });
                            }
                        }
                    };

                    // Create a Razorpay instance and open the checkout
                    const rzp1 = new Razorpay(options);
                    rzp1.open();
                })
                .catch(function (error) {
                    console.error("Error creating order:", error);
                });
        }
    </script>
</body>

</html>