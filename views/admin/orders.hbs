{{!-- views/admin/orders.handlebars --}}
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <title>{{title}}</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    /* Ensure images scale well on small screens */
    .order-img {
      width: 50px;
      height: auto;
      margin-right: 10px;
    }

    /* Wrap text properly on small screens */
    @media (max-width: 576px) {

      .table th,
      .table td {
        display: block;
        width: 100%;
        text-align: left;
      }

      .table tr {
        margin-bottom: 10px;
        border-bottom: 1px solid #ddd;
        display: block;
      }

      .order-img {
        width: 40px;
      }
    }

    .status-label {
      font-weight: bold;
      padding: 5px;
      border-radius: 5px;
    }

    .status-pending {
      background-color: orange;
      color: white;
    }

    .status-confirmed {
      background-color: green;
      color: white;
    }

    .status-delivered {
      background-color: blue;
      color: white;
    }

    .status-cancelled {
      background-color: red;
      color: white;
    }
  </style>
</head>

<body>
  <div class="container-fluid" style="width:89%;padding-top:1%;margin-left:11%">
    <table class="table table-bordered">
      <thead>
        <tr>
          <th>Order ID </th>
          <th>Status</th>
          <th>Customer Name</th>
          <th>Order Date</th>
          <th>Payment Status</th>
          <th>Total Amount</th>
          <th class="text-center">Actions</th>
        </tr>
      </thead>
      <tbody>
        {{#each orders}}
        <tr>
          <td>#{{orderNumber}}</td>
          <td>
            <span class="status-label status-{{status}}">
              {{status}}
            </span>
          </td>
          <td>{{addressDetails.name}}</td>
          <td>{{orderDate}}</td>
          <td>
            <span class="status-label status-{{payments.paymentStatus}}">
              {{payments.paymentStatus}}
            </span>
          </td>
          <td>₹{{totalAmount}}</td>
          <td class="text-center">
            <button class="btn btn-dark btn-sm" data-id="{{_id}}" onclick="viewOrderDetails(this)">View</button>
            <button class="btn btn-primary btn-sm" data-id="{{_id}}"
              onclick="changeStatus('confirmed', this)">Confirm</button>
            <button class="btn btn-warning btn-sm" data-id="{{_id}}"
              onclick="changeStatus('delivered', this)">Delivered</button>
            <button class="btn btn-success btn-sm" data-id="{{_id}}"
              onclick="openPaymentModal('{{orderNumber}}','{{totalAmount}}')">Pay Now</button>
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>

  <!-- Order Details Modal -->
  <div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel"
    aria-hidden="true">
    <div class="modal-dialog modal-xl">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="orderDetailsContent">
          <!-- Order details will be loaded here via AJAX -->
          <p>Loading...</p>
        </div>
        <div class="modal-footer justify-content-between">
          <div>
            <select id="newStatus" class="" style="width: auto; display: none;">
            </select>
          </div>
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Payment Modal -->
  <div id="paymentModal"
    style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background:rgba(0,0,0,0.7);">
    <div
      style="background:#f2f2f2; padding:20px; width:400px; margin:100px auto; border-radius:8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
      <h3 style="color:#333;">Payment Details</h3>
      <p style="color:#555;">Order ID: <span id="modalOrderId" style="font-weight:bold;"></span></p>
      <p style="color:#555;">Amount: <span id="modalAmount" style="font-weight:bold;"></span></p>
      <label for="paymentType" style="color:#333;">Payment Type:</label>
      <select id="paymentType" class="form-select" style="margin-top:5px;">
        <option value="Cash">Cash</option>
        <option value="UPI">UPI</option>
      </select>
      <br />
      <button class="btn btn-success" onclick="storePayment()">Submit Payment</button>
      <button class="btn btn-danger" onclick="closePaymentModal()" style="margin-left:10px;">Cancel</button>
    </div>
  </div>



  <script>
    // Helper: Current order for status update
    let currentOrder = null;

    // Convert a date string to locale date (you can also define a Handlebars helper on the server)
    function formatDate(dateStr) {
      return new Date(dateStr).toLocaleDateString();
    }

    // Called when "View" button is clicked; fetch and display order details in the modal
    async function viewOrderDetails(button) {
      const orderId = button.getAttribute('data-id');
      const modalBody = document.getElementById('orderDetailsContent');
      modalBody.innerHTML = '<p>Loading...</p>';
      try {
        const response = await axios.get(`/admin/order/${orderId}`);
        currentOrder = response.data[0];  // Assuming API returns an array with one order
        modalBody.innerHTML = `
          <div class="table-responsive">
  <table class="table table-striped">
    <tr>
      <th>Order Number</th>
      <td>#${currentOrder.orderNumber}</td>
    </tr>
    <tr>
      <th>Status</th>
      <td>
        <span class="status-label status-${currentOrder.status.toLowerCase()}">
          ${currentOrder.status}
        </span>
      </td>
    </tr>
    <tr>
      <th>Customer Details</th>
      <td>
        <span>
          ${currentOrder.addressDetails.name} <br>
          ${currentOrder.addressDetails.email} <br>
          +91 ${currentOrder.addressDetails.phone}
        </span>
      </td>
    </tr>
    <tr>
      <th>Address</th>
      <td style="word-wrap: break-word;">
        ${currentOrder.addressDetails
            ? `
            ${currentOrder.addressDetails.line1} &nbsp;
            ${currentOrder.addressDetails.line2 ? currentOrder.addressDetails.line2 + '&nbsp;' : ''} 
            ${currentOrder.addressDetails.city}, ${currentOrder.addressDetails.state} - ${currentOrder.addressDetails.zip} &nbsp;<br>`
            : 'No address details available'
          }
      </td>
    </tr>
    <tr>
      <th>Address Type</th>
      <td><span>${currentOrder.addressDetails.addressType}</span></td>
    </tr>
    <tr>
      <th>Time Slot</th>
      <td><span>${currentOrder.timeSlot}</span></td>
    </tr>
    <tr>
      <th>Items</th>
      <td>
        <ul class="list-unstyled">
          ${Array.isArray(currentOrder.products)
            ? currentOrder.products.map(product => `
              <li class="d-flex align-items-center">
                <img src="${product.imageUrl}" alt="${product.name}" class="order-img"/>
                <span>${product.name} (Qty: <b>${product.quantity}</b>) : <b>₹${product.totalPrice}</b></span>
              </li>
            `).join('')
            : `<li class="d-flex align-items-center">
                <img src="${currentOrder.products.imageUrl}" alt="${currentOrder.products.name}" class="order-img"/>
                <span>${currentOrder.products.name} (Qty: <b>${currentOrder.products.quantity}</b>) : <b>₹${currentOrder.products.totalPrice}</b></span>
              </li>`
          }
        </ul>
      </td>
    </tr>
    <tr>
      <th>Total Amount</th>
      <td><b>₹${currentOrder.totalAmount}</b></td>
    </tr>
    <tr>
      <th>Order Date</th>
      <td>${formatDate(currentOrder.orderDate)}</td>
    </tr>
    <tr>
      <th>Instructions</th>
      <td>${currentOrder.instructions || 'None'}</td>
    </tr>
  </table>
</div>
        `;
        // Set current status as default in dropdown
        document.getElementById('newStatus').value = currentOrder.status;
        // Open the modal
        const orderModal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
        orderModal.show();
      } catch (error) {
        console.error('Error fetching order details:', error);
        modalBody.innerHTML = '<p class="text-danger">Failed to load order details. Please try again later.</p>';
      }
    }

    // Update order status
    async function changeStatus(newStatus, button) {
      const orderId = button.getAttribute('data-id');
      try {
        await axios.put(`/admin/status/change/${orderId}`, { status: newStatus });
        alert(`Order status updated to ${newStatus}`);
        // Optionally, refresh page or update the UI
        window.location.reload();
      } catch (error) {
        console.error('Failed to update status:', error);
        alert('Failed to update status. Please try again.');
      }
    }

    // Called when Update Status button is clicked in modal
    async function updateOrderStatus() {
      if (!currentOrder) return;
      const newStatus = document.getElementById('newStatus').value;
      try {
        await axios.put(`/admin/status/change/${currentOrder._id}`, { status: newStatus });
        window.location.reload();
      } catch (error) {
        console.error('Failed to update status:', error);
        alert('Failed to update status. Please try again.');
      }
    }

    document.getElementById('updateStatusBtn').addEventListener('click', updateOrderStatus);

    // Payment Modal functions
    function openPaymentModal(orderNumber, amount) {
      document.getElementById('modalOrderId').innerText = orderNumber;
      document.getElementById('modalAmount').innerText = amount;
      document.getElementById('paymentModal').style.display = 'block';
    }
    function closePaymentModal() {
      document.getElementById('paymentModal').style.display = 'none';
    }
    async function storePayment() {
      const orderId = document.getElementById('modalOrderId').innerText;
      const amount = document.getElementById('modalAmount').innerText;
      const paymentType = document.getElementById('paymentType').value;
      try {
        await axios.post('/admin/payment', { orderId, amount, paymentType });
        closePaymentModal();
        window.location.reload();
      } catch (error) {
        console.error('Payment error:', error);
        alert('Failed to store payment. Please try again.');
      }
    }
  </script>
</body>

</html>